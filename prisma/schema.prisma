// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  username  String      @unique
  password  String      
  name      String      
  characters Character[]

  @@map("User")
}

model Character {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  health        Int           @default(500)
  power         Int           @default(100)
  money         Int           @default(10000)
  userId        Int           
  user          User          @relation(fields: [userId], references: [id])
  items         CharacterItem[]
  equippedItems EquippedItem[]

  @@map("Character")
}

model Item {
  id            Int           @id @default(autoincrement())
  code          Int           @unique
  name          String        
  price         Int           
  health        Int           @default(0) 
  power         Int           @default(0)
  characterItems CharacterItem[]
  equippedItems EquippedItem[]
  
  @@map("Item")
}

model CharacterItem {
  characterId Int
  itemId      Int
  quantity    Int       @default(1)
  character   Character @relation(fields: [characterId], references: [id])
  item        Item      @relation(fields: [itemId], references: [id])

  @@id([characterId, itemId])
  @@map("CharacterItem")
}

model EquippedItem {
  id          Int       @id @default(autoincrement()) 
  characterId Int       
  itemId      Int       
  character   Character @relation(fields: [characterId], references: [id])
  item        Item      @relation(fields: [itemId], references: [id])

  @@map("EquippedItem")
}
